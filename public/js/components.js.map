{"version":3,"sources":["app.js","entry.js","home.js","nav.js","structure.js","users.js","admin/entries.js","admin/entry-edit.js","admin/index.js","admin/structures-edit.js","admin/structures.js","admin/users.js","store.js","initializer.js"],"names":["AppComponent","React","createClass","componentDidMount","Store","setHistoryObject","props","history","subscribe","forceUpdate","render","isLoading","location","Admin","Users","Structure","Entry","Home","getInitialState","comment","toggleFavorite","id","e","preventDefault","state","addComment","setState","currentUser","getCurrentUser","slug","match","params","structure","entrySlug","entryslug","entry","getEntry","getStructure","favorited","favorites","includes","_id","title","Intl","DateTimeFormat","year","month","day","format","createdDate","getUser","author","username","fields","map","field","value","generateReference","ref","getEntryWithoutSlug","structureSlug","blurb","label","type","__html","url","window","origin","ext","Date","comments","index","text","target","structures","getStructures","name","getEntriesByStructure","length","description","Nav","login","undefined","password","logout","signup","values","bootbox","dialog","message","onEscape","console","log","buttons","ok","className","callback","newUser","$","val","biography","show","getUsers","find","user","saveUser","cancel","cancelLogin","flashedSuccess","getFlashedSuccess","flashedError","getFlashedError","pathname","isAdmin","search","lastLoadedSearch","searchIds","loadSearch","getParams","then","redirect","onlyFavorites","pageParam","page","parseInt","changePage","entries","filter","x","slice","pageSize","Array","apply","Math","ceil","_","users","perPage","getEntryById","bind","slugs","sort","reduce","a","b","concat","signupDate","AdminEntries","deleteEntry","AdminEntryEdit","Object","assign","submit","error","isValidUrl","URL","isValidString","str","isNaN","parse","saveEntry","getField","defaultValue","getInnerField","setField","setInnerField","parseFloat","checked","files","moment","toDate","goBack","AdminStructures","AdminStructureEdit","AdminUsers","addField","removeField","splice","updateField","saveStructure","fieldTypes","getFieldTypes","fieldOptions","keys","deleteStructure","promote","server","ajaxSetup","data","dataType","xhrFields","withCredentials","crossDomain","StoreClass","setLoading","loadData","currentUserId","getEntries","setFlashedSuccess","setFlashedError","push","loading","trigger","cb","_subscribe","async","parallel","get","all","ajax","method","catch","JSON","stringify","contentType","findIndex","FormData","fileNumber","forEach","key","constructor","FileList","f","append","toZip","file","processData","entryId","indexOf","post","ReactRouterDOM","BrowserRouter","Switch","Route","Link","split","parts","param","ReactDOM","document","getElementById"],"mappings":"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","file":"components.js","sourcesContent":["const AppComponent = React.createClass({\n  componentDidMount() {\n    Store.setHistoryObject(this.props.history);\n    Store.subscribe(() => {\n      this.forceUpdate();\n    })\n  },\n\n  render() {\n    if (Store.isLoading()) {\n      return (\n        <main className=\"container\">\n          <div className=\"alert alert-info mt-3\" role=\"alert\">\n              <p className=\"mb-0\">Loading...</p>\n          </div>\n        </main>\n      )\n    }\n\n    return (\n      <div className=\"mb-5\">\n        <Nav location={this.props.location} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/admin\" component={ Admin } />\n            <Route exact path=\"/users\" component={ Users } />\n            <Route exact path=\"/:structure\" component={ Structure } />\n            <Route exact path=\"/:structure/favorites\" component={ Structure } />\n            <Route exact path=\"/:structure/:entryslug\" component={ Entry } />\n            <Route exact path=\"/\" component={ Home } />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n});","const Entry = React.createClass({\n    getInitialState() {\n        return {\n            comment: \"\"\n        };\n    },\n\n    toggleFavorite(id) {\n        Store.toggleFavorite(id);\n    },\n\n    comment(e, id) {\n        e.preventDefault();\n        if (this.state.comment !== \"\") {\n            Store.addComment(id, this.state.comment);\n            this.setState({comment: \"\"});\n        }\n    },\n\n    render() {\n        const currentUser = Store.getCurrentUser();\n        const slug = this.props.match.params.structure;\n        const entrySlug = this.props.match.params.entryslug;\n        const entry = Store.getEntry(slug, entrySlug);\n\n        if (!entry) {\n            return (\n                <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                    Cannot find entry :(\n                </div>\n            );\n        }\n\n        const structure = Store.getStructure(slug);\n        const favorited = currentUser && currentUser.favorites.includes(entry._id) ? \"favorited\" : \"\";\n\n        return (\n            <div className=\"mt-3\">\n                <h1 className=\"h2\">\n                    {entry.title}\n                    {currentUser &&\n                        <i onClick={() => this.toggleFavorite(entry._id)} className={`fa fa-star ml-2 favorite ${favorited}`} aria-hidden=\"true\"></i>\n                    }\n                </h1>\n                <p>\n                {Intl.DateTimeFormat([], {\n                        year:    \"numeric\",\n                        month:  \"short\",\n                        day:    \"numeric\",\n                    }).format(entry.createdDate)\n                } by {Store.getUser(entry.author).username}\n                </p>\n                {structure.fields.map(field => {\n                    const _id = field._id;\n                    const value = entry.fields[_id];\n                    if (!value) {\n                        return null;\n                    }\n                    const generateReference = () => {\n                        const ref = Store.getEntryWithoutSlug(value);\n                        if (!ref) {\n                            return null;\n                        }\n                        return (\n                            <span>\n                                <Link to={`/${ref.structureSlug}/${value}`}>{ref.title}</Link> ({ref.structureSlug})\n                                <p>{ref.blurb}</p>\n                            </span>\n                        )\n                    };\n                    return (\n                        <div key={_id} className=\"box mb-2\">\n                            <div className=\"field\">{field.label}</div>\n                            {[\"text\", \"textarea\", \"wysiwyg\"].includes(field.type)\n                                ? <p className=\"mb-0\" dangerouslySetInnerHTML={{__html: value}} /> // Safe to use this because only admin can set the content\n                                : field.type === \"number\"\n                                ? <span className=\"badge badge-warning\">{value}</span>\n                                : field.type === \"checkbox\"\n                                ? <span className=\"badge badge-warning\">{value ? \"Yes\" : \"No\"}</span>\n                                : field.type === \"link\"\n                                ? <a href={value.url} target=\"_blank\">{value.label}</a>\n                                : field.type === \"reference\"\n                                ? generateReference()\n                                : field.type === \"picture\"\n                                ? <img className=\"img-fluid\" alt={field.label} src={`${window.location.origin}/public/files/${entrySlug}/${_id}${value.ext}`} />\n                                : field.type === \"file\"\n                                ? <a href={`${window.location.origin}/public/files/${entrySlug}/${_id}.zip`} target=\"_blank\">Download {field.label}</a>\n                                : field.type === \"youtube\"\n                                ? <iframe width=\"640\" height=\"360\" src={value} frameBorder=\"0\" allowFullScreen></iframe>\n                                : field.type === \"datepicker\"\n                                ? <span className=\"badge badge-warning\">{Intl.DateTimeFormat([], {\n                                        year:    \"numeric\",\n                                        month:  \"short\",\n                                        day:    \"numeric\",\n                                    }).format(new Date(value))}</span>\n                                : null\n                            }\n                        </div>\n                    );\n                })}\n                <h2 className=\"h3 mt-4\">Comments</h2>\n                {entry.comments.map((comment, index) =>\n                    <div key={index} className=\"box mb-3\">\n                        <span className=\"author\">\n                            {Store.getUser(comment.author).username}\n                            <span className=\"badge badge-warning ml-2\">\n                                {Intl.DateTimeFormat([], {\n                                    year:    \"numeric\",\n                                    month:  \"short\",\n                                    day:    \"numeric\",\n                                }).format(entry.createdDate)}\n                            </span>\n                        </span>\n                        <br />\n                        <span className=\"comment\">{comment.text}</span>\n                    </div>\n                )}\n                {currentUser ? (\n                        <form onSubmit={e => this.comment(e, entry._id)} className=\"form box mb-3\">\n                            <div className=\"form-group\">\n                                <textarea aria-label=\"Your Comment\" onChange={e => this.setState({comment: e.target.value})} value={this.state.comment} type=\"text\" className=\"form-control\" id=\"comment\" placeholder=\"Enter comment\" />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Comment</button>\n                        </form>\n                    ) : (\n                        <div className=\"alert alert-warning mt-3\" role=\"alert\">\n                            Login to comment!\n                        </div>\n                    )\n                }\n            </div>\n        );\n    }\n});","const Home = React.createClass({\n    render() {\n        const structures = Store.getStructures();\n\n        return (\n            <div>\n                <div className=\"jumbotron mt-3\">\n                    <h1 className=\"h1\">Welcome to this awesome CMS script!</h1>\n                    <p>Run <strong>npm run seed</strong> to get some sample data in. Then login as an admin or non-admin user and check out the seeded structure and entry examples.</p>\n                    <p className=\"mb-0\">Test admin account: daniel/test</p>\n                    <p className=\"mb-0\">Test non-admin account: bob/test2</p>\n                </div>\n                <div className=\"row\">\n                    {structures.map(structure => (\n                        <div className=\"mt-3 mb-2 col-6 col-lg-4\" key={structure.slug}>\n                            <h2 className=\"h2\">\n                                {structure.name}\n                                <span className=\"badge badge-warning ml-2\">{Store.getEntriesByStructure(structure.slug).length}</span>\n                            </h2>\n                            <p>{structure.description}</p>\n                            <Link to={`/${structure.slug}`}>\n                                <span role=\"button\" className=\"btn btn-secondary\">Start exploring »</span>\n                            </Link>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n});","const Nav = React.createClass({\n    getInitialState() {\n        return {\n            login: undefined,\n            username: \"\",\n            password: \"\"\n        };\n    },\n\n    logout(e) {\n        e.preventDefault();\n        Store.logout();\n    },\n\n    login(e) {\n        e.preventDefault();\n        // this.attemptLogin(\"daniel\", \"test\");\n        if (this.state.login) {\n            if (this.state.password !== \"\" && this.state.username !== \"\") {\n                Store.login(this.state.username, this.state.password);\n            }\n        } else {\n            this.setState({login: true});\n        }\n    },\n\n    signup(e) {\n        e.preventDefault();\n        const values = bootbox.dialog({\n            title: 'Signup',\n            message: \"<form action=''>\\\n                <div class='form-group'><label for='s_username'>Username:</label><input class='form-control' type='text' id='s_username' /></div>\\\n                <div class='form-group'><label for='s_password'>Password:</label><input class='form-control' type='password' id='s_password' /></div>\\\n                <div class='form-group'><label for='s_bio'>Bio:</label><textarea class='form-control' id='s_bio' /></div>\\\n                <div class='container'>\\\n                        <div class='alert alert-danger mt-3' role='alert' id='s_error'></div>\\\n                </div>\\\n            </form>\",\n            onEscape(e) {\n                console.log(e);\n            },\n            buttons: {\n                ok: {\n                    label: \"Signup\",\n                    className: 'btn-info',\n                    callback() {\n                        const newUser = {\n                            username: $(\"#s_username\").val(),\n                            password: $(\"#s_password\").val(),\n                            biography: $(\"#s_bio\").val(),\n                        }\n                        if (newUser.username === \"\") {\n                            $(\"#s_error\").text(\"Please enter a username\").show();\n                            return false;\n                        }\n                        if (Store.getUsers().find(user => user.username === newUser.username)) {\n                            $(\"#s_error\").text(\"Username already exists\").show();\n                            return false;\n                        }\n                        if (newUser.password === \"\") {\n                            $(\"#s_error\").text(\"Please enter a password\").show();\n                            return false;\n                        }\n                        if (newUser.biography === \"\") {\n                            $(\"#s_error\").text(\"Please enter a bio\").show();\n                            return false;\n                        }\n                        Store.saveUser(newUser);\n                    }\n                },\n                cancel: {\n                    label: \"Cancel\",\n                    className: 'btn-danger',\n                }\n            },\n        });\n    },\n\n    cancelLogin(e) {\n        e.preventDefault();\n        this.setState({login: undefined});\n    },\n\n    render() {\n        const flashedSuccess = Store.getFlashedSuccess();\n        const flashedError = Store.getFlashedError();\n        const currentUser = Store.getCurrentUser();\n\n        return (\n            <header>\n                <nav className=\"navbar navbar-toggleable-md navbar-light bg-faded\">\n                    <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <Link to={`/`} className=\"navbar-brand\">\n                        CMS\n                    </Link>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                        <div className=\"navbar-nav mr-auto\">\n                            <Link to={`/`}>\n                                <span className={\n                                    `nav-link ${this.props.location.pathname === \"/\" ? 'active' : ''}`\n                                }>Home</span>\n                            </Link>\n                            <Link to={`/users`}>\n                                <span className={\n                                    `nav-link ${this.props.location.pathname === \"/users\" ? 'active' : ''}`\n                                }>Users</span>\n                            </Link>\n                            {Store.isAdmin() && \n                                <div className=\"nav-item dropdown\">\n                                    <a href=\"\" className={`nav-link dropdown-toggle ${this.props.location.pathname.includes(\"admin\") ? 'active' : ''}`} id=\"admin-dropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Admin</a>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"admin-dropdown\">\n                                        <Link className=\"dropdown-item\" to={`/admin`}>Home</Link>\n                                        <Link className=\"dropdown-item\" to={`/admin/structures`}>Structures</Link>\n                                        <Link className=\"dropdown-item\" to={`/admin/users`}>Users</Link>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                        <div className=\"navbar-nav\">\n                            <form className=\"form-inline my-2 my-md-0\">\n                                {this.state.login !== undefined &&\n                                    <span>\n                                        <input onChange={e => this.setState({username: e.target.value})} className=\"form-control\" value={this.state.username} type=\"text\" placeholder=\"Username\" />\n                                        <input onChange={e => this.setState({password: e.target.value})} className=\"form-control ml-sm-2\" value={this.state.password} type=\"password\" placeholder=\"Password\" />\n                                    </span>\n                                }\n                                {currentUser\n                                    ? (\n                                        <span>\n                                            <a className=\"nav-link\">{currentUser.username}</a>\n                                            <button onClick={this.logout} className=\"btn btn-outline-primary my-2 my-sm-0 ml-sm-2\" type=\"submit\">Logout</button>\n                                        </span>\n                                    )\n                                    : (\n                                    <span>\n                                        <button onClick={this.login} className=\"btn btn-outline-primary my-2 my-sm-0 ml-sm-2\" type=\"submit\">Login</button>\n                                        {!this.state.login &&\n                                            <button onClick={this.signup} className=\"btn btn-outline-primary my-2 my-sm-0 ml-sm-2\" type=\"submit\">Signup</button>\n                                        }\n                                        {this.state.login &&\n                                            <button onClick={this.cancelLogin} className=\"btn btn-link my-2 my-sm-0\" type=\"submit\">Cancel</button>\n                                        }\n                                    </span>\n                                    )\n                                }\n                                \n                            </form>\n                        </div>\n                    </div>\n                </nav>\n                {flashedSuccess &&\n                    <div className=\"container\">\n                        <div className=\"alert alert-success mt-3\" role=\"alert\">\n                            {flashedSuccess}\n                        </div>\n                    </div>\n                }\n                {flashedError &&\n                    <div className=\"container\">\n                        <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                            {flashedError}\n                        </div>\n                    </div>\n                }\n            </header>\n        );\n    }\n});","const Structure = React.createClass({\n    getInitialState() {\n        return {\n            search: \"\",\n            lastLoadedSearch: \"\",\n            searchIds: [],\n        };\n    },\n\n    loadSearch() {\n        const {search} = getParams(this.props.location);\n        if(search !== undefined && search !== this.state.lastLoadedSearch) {\n            if (!search) {\n                return this.setState({search: \"\", lastLoadedSearch: \"\"});\n            }\n            const slug = this.props.match.params.structure;\n            Store.search(slug, search)\n            .then(searchIds => {\n                this.setState({\n                    searchIds,\n                    search,\n                    lastLoadedSearch: search,\n                });\n            });\n        }\n    },\n\n    search(e) {\n        e.preventDefault();\n        const {search} = getParams(this.props.location);\n        const slug = this.props.match.params.structure;\n        if (search !== this.state.search) {\n            Store.redirect(`/${slug}?search=${this.state.search}`);\n        }\n    },\n\n    render() {\n        this.loadSearch();\n    \n        const currentUser = Store.getCurrentUser();\n        const onlyFavorites = this.props.location.pathname.includes(\"/favorites\");\n\n        if (!currentUser && onlyFavorites) {\n            return (\n                <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                    Must be logged in to see favorites!\n                </div>\n            );\n        }\n        const slug = this.props.match.params.structure;\n        const structure = Store.getStructure(slug);\n\n        if (!structure) {\n            return (\n                <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                    Cannot find structure :(\n                </div>\n            );\n        }\n\n        const {page:pageParam, search} = getParams(this.props.location);\n        const page = parseInt(pageParam) || 0;\n        const changePage = page => {\n            return `page=${page}${search ? `&search=${search}` : ''}`;\n        }\n\n        const entries = Store.getEntriesByStructure(slug)\n            .filter(x => !onlyFavorites || currentUser.favorites.includes(x._id))\n            .filter(x => !this.state.lastLoadedSearch || !this.state.searchIds || this.state.searchIds.includes(x._id))\n\n        return (\n            <div>\n                <div className=\"jumbotron mt-3\">\n                    {!onlyFavorites && currentUser &&\n                        <Link className=\"float-right\" to={`/${slug}/favorites`}>\n                            <i className=\"fa fa-star\" aria-hidden=\"true\"></i> Favorites\n                        </Link>\n                    }\n                    {onlyFavorites &&\n                        <Link className=\"float-right\" to={`/${slug}`}>All</Link>\n                    }\n                    <h1 className=\"h1\">All {onlyFavorites ? 'your favorite' : 'about'} {structure.name}!</h1>\n                    <p className=\"mb-0\">{structure.description}</p>\n                    <form onSubmit={this.search} className=\"form-inline mt-3\">\n                        <div className=\"form-group mr-1\">\n                            <label htmlFor=\"phrase\" className=\"sr-only\">Phrase</label>\n                            <input disabled={search && search !== this.state.lastLoadedSearch} onChange={e => this.setState({search: e.target.value})} className=\"form-control\" id=\"phrase\" placeholder=\"Phrase\" value={this.state.search} />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Search</button>\n                    </form>\n                </div>\n                {entries.length === 0 &&\n                    <div className=\"alert alert-warning mt-3\" role=\"alert\">\n                        {onlyFavorites ? \"You have not favorited any entries yet :(\" : \"No entries have been found :(\"}\n                    </div>\n                }\n                <div className=\"row\">\n                    {entries.slice(page * structure.pageSize, (page + 1) * structure.pageSize).map(entry => (\n                        <div className=\"mt-3 mb-2 col-6 col-lg-4\" key={entry.slug}>\n                            <h2 className=\"h2\">\n                                {entry.title}\n                                <span className=\"badge badge-warning ml-2\">{entry.comments.length}</span>\n                            </h2>\n                            <p>\n                            {Intl.DateTimeFormat([], {\n                                    year:    \"numeric\",\n                                    month:  \"short\",\n                                    day:    \"numeric\",\n                                }).format(entry.createdDate)\n                            } by {Store.getUser(entry.author).username}\n                            </p>\n                            <p>{entry.blurb}</p>\n                            <Link to={`/${slug}/${entry.slug}`}>\n                                <span role=\"button\" className=\"btn btn-secondary\">Start reading »</span>\n                            </Link>\n                        </div>\n                    ))}\n                </div>\n                <nav aria-label=\"Pagination\">\n                    <ul className=\"pagination mt-5\">\n                        {Array.apply(null, Array(Math.ceil(entries.length/structure.pageSize))).map((_, index) => \n                            <li key={index} className={`page-item ${index === page ? 'active' : ''}`}>\n                                <Link aria-label={`Navigate to page ${index}`} className=\"page-link\" to={`/${slug}?${changePage(index)}`}>\n                                    {index}\n                                </Link>\n                            </li>\n                        )}\n                    </ul>\n                </nav>\n            </div>\n        );\n    }\n});","const Users = React.createClass({\n    render() {\n        const users = Store.getUsers();\n\n        const {page:pageParam} = getParams(this.props.location);\n        const page = parseInt(pageParam) || 0;\n        const perPage = 15;\n\n        return (\n            <div>\n                <div className=\"row\">\n                    {users.slice(page * perPage, (page + 1) * perPage).map(user => {\n                        const favorites = user.favorites.map(Store.getEntryById.bind(Store)).filter(x => x);\n                        const slugs = favorites.map(x => x.structureSlug).sort().reduce((a, b) => a[0] === b ? a : a.concat([b]), []);\n                        \n                        return (\n                            <div className=\"mt-3 mb-2 col-6 col-lg-4\" key={user.username}>\n                                <h1 className=\"h2\">\n                                    {user.username}\n                                    <span className=\"badge badge-warning ml-2\">{Intl.DateTimeFormat([], {\n                                        month:  \"short\",\n                                        day:    \"numeric\",\n                                    }).format(user.signupDate)}</span>\n                                </h1>\n                                <p>{user.biography}</p>\n                                {slugs.map(slug =>\n                                    <div key={slug} className=\"box mb-3\">\n                                        <h2 className=\"h3\">\n                                            Favorites in\n                                            <Link className={\"ml-2\"} to={`/${slug}`}>\n                                            {slug}\n                                            </Link>\n                                        </h2>\n                                        {favorites.filter(x => x.structureSlug === slug).map(entry => \n                                            <Link key={entry.slug} className=\"mr-3\" to={`/${slug}/${entry.slug}`}>\n                                            {entry.title}\n                                            </Link>\n                                        )}\n                                    </div>\n                                )}\n                            </div>\n                        );\n                    })}\n                </div>\n                <nav aria-label=\"Pagination\">\n                    <ul className=\"pagination mt-5\">\n                        {Array.apply(null, Array(Math.ceil(users.length/perPage))).map((_, index) => \n                            <li key={index} className={`page-item ${index === page ? 'active' : ''}`}>\n                                <Link aria-label={`Navigate to page ${index}`} className=\"page-link\" to={`/users?page=${index}`}>\n                                    {index}\n                                </Link>\n                            </li>\n                        )}\n                    </ul>\n                </nav>\n            </div>\n        );\n    }\n});","const AdminEntries = React.createClass({\n    render() {\n        const slug = this.props.match.params.slug;\n        const entries = Store.getEntriesByStructure(slug);\n\n        return (\n            <div>\n                <div className=\"alert alert-warning mt-3 clearfix\" role=\"alert\">\n                    <span className=\"mt-2 d-inline-block\">We love 'em Entries!</span>\n                    <Link to={`/admin/structures/${slug}/new`}>\n                        <span role=\"button\" className=\"btn btn-outline-warning float-right\">New Entry</span>\n                    </Link>\n                </div>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Slug</th>\n                            <th>Blurb</th>\n                            <th>Edit</th>\n                            <th>Delete</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {entries.map(entry => (\n                            <tr key={entry.slug}>\n                                <td>{entry.slug}</td>\n                                <td>{entry.blurb}</td>\n                                <td>\n                                    <Link aria-label=\"Edit Entry\" className=\"btn btn-secondary\" to={`/admin/structures/${slug}/${entry.slug}`}>\n                                        <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                    </Link>\n                                </td>\n                                <td>\n                                    <a aria-label=\"Delete Entry\" href=\"\" className=\"btn btn-outline-danger\" onClick={e => e.preventDefault() || Store.deleteEntry(entry._id)}>\n                                        <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                                    </a>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n});","const AdminEntryEdit = React.createClass({\n    getInitialState() {\n        return {};\n    },\n\n    componentDidMount() {\n        const structure = Store.getStructure(this.props.match.params.slug);\n        const entry = Store.getEntry(this.props.match.params.slug, this.props.match.params.entrySlug);\n        this.setState(\n            Object.assign({\n                structure\n            }, entry) // To prevent a referenced object\n        );\n    },\n\n    submit(e) {\n        e.preventDefault();\n        const { _id, title, slug, blurb, fields = {} } = this.state;\n        if (!title) {\n            return this.setState({error: \"Please enter a title\"});\n        }\n        if (!slug) {\n            return this.setState({error: \"Please enter a slug\"});\n        }\n        if (Store.getEntryWithoutSlug(slug) && Store.getEntryWithoutSlug(slug)._id !== _id) {\n            return this.setState({error: \"Slug already exists on an entry\"});\n        }\n        if (!blurb) {\n            return this.setState({error: \"Please enter a blurb\"});\n        }\n\n        const isValidUrl = url => {\n            try { new URL(url); return true; } catch(e) { return false; }\n        }\n        const isValidString = str => typeof str === \"string\" && str !== \"\";\n        for (const field of this.state.structure.fields) {\n            const value = fields[field._id];\n            if (([\"text\", \"textarea\", \"wysiwyg\"].includes(field.type) && !isValidString(value))\n                || (field.type === \"number\" && isNaN(value))\n                || (field.type === \"checkbox\" && ![true, false].includes(value))\n                || (field.type === \"link\" && (!isValidUrl((value || {}).url) || !isValidString((value || {}).label)))\n                || (field.type === \"youtube\" && !isValidUrl(value))\n                || (field.type === \"reference\" && !Store.getEntryWithoutSlug(value))\n                || (field.type === \"datepicker\" && !Date.parse(value))\n            ) {\n                return this.setState({error: `Please set a valid ${field.label}`});\n            }\n            if (field.type === \"youtube\" && !value.match(/^https:\\/\\/www.youtube.com\\/embed\\/[\\w-]+$/)) {\n                return this.setState({error: `${field.label} must be in the format https://www.youtube.com/embed/video_id`});\n            }\n            if ([\"picture\", \"file\"].includes(field.type) && (!value || (!value.ext && value.length !== 1))) {\n                return this.setState({error: `${field.label} must include one file`});\n            }\n            if (field.type === \"picture\" && !value.ext && !value[0].type.includes(\"image/\")) {\n                return this.setState({error: `${field.label} must be an image`});\n            }\n        }\n        this.setState({error: null});\n        Store.saveEntry({\n            _id,\n            title,\n            slug,\n            structureSlug: this.props.match.params.slug,\n            blurb,\n            fields\n        });\n    },\n\n    getField(_id, defaultValue = \"\") {\n        return (this.state.fields && this.state.fields[_id]) || defaultValue;\n    },\n\n    getInnerField(_id, type) {\n        return (this.getField(_id) && this.state.fields[_id][type]) || \"\";\n    },\n\n    setField(_id, value) {\n        const fields = Object.assign(this.state.fields || {}, {\n            [_id]: value\n        });\n        this.setState({ fields })\n    },\n\n    setInnerField(_id, type, value) {\n        let fields = this.state.fields || {};\n        fields = Object.assign(fields, {\n            [_id]: Object.assign({}, fields[_id], {[type]: value})\n        });\n        this.setState({ fields })\n    },\n\n    render() {\n        if (!this.state._id) {\n            return (\n                <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                    This entry does not exist :(\n                </div>\n            );\n        }\n\n        if (!this.state.structure) {\n            return (\n                <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                    Referenced structure does not exist :(\n                </div>\n            );\n        }\n\n        let error = \"\";\n        if (this.state.error) {\n            error = (\n                <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                    Error: {this.state.error}\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"card mt-3\">\n                <div className=\"card-header\">{this.state.title || \"New Entry\"}</div>\n                <div className=\"card-body\">\n                    <form onSubmit={e => e.preventDefault()}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"title\">Entry title</label>\n                            <input onChange={e => this.setState({title: e.target.value})} value={this.state.title || \"\"} type=\"text\" className=\"form-control\" id=\"title\" placeholder=\"Enter title\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"slug\">Slug</label>\n                            <input onChange={e => this.setState({slug: e.target.value})} value={this.state.slug || \"\"} disabled={this.state._id !== \"new\" && \"disabled\"} type=\"text\" className=\"form-control\" id=\"slug\" placeholder=\"Enter Slug\" />\n                            <small className=\"form-text text-muted\">This is unique, url friendly way of referencing your data type. This cannot be changed once created.</small>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"blurb\">Blurb</label>\n                            <input onChange={e => this.setState({blurb: e.target.value})} value={this.state.blurb || \"\"} type=\"text\" className=\"form-control\" id=\"blurb\" placeholder=\"Enter blurb\" />\n                            <small className=\"form-text text-muted\">This will be shown on the structure listing page.</small>\n                        </div>\n                        {this.state.structure.fields.map(field =>\n                            <div key={field.label} className=\"form-group\">\n                                <label htmlFor={field.label}>{field.label}</label>\n                                { (field.type === \"text\") ? (\n                                    <input onChange={e => this.setField(field._id, e.target.value)} value={this.getField(field._id, \"\")} className=\"form-control\" id={field.label} placeholder=\"Enter text\" />\n                                  ) : (field.type === \"number\") ? (\n                                    <input onChange={e => this.setField(field._id, parseFloat(e.target.value))} type=\"number\" value={this.getField(field._id, false)} className=\"form-control\" id={field.label} placeholder=\"Enter number\" />\n                                  ) : (field.type === \"checkbox\") ? (\n                                    <input onChange={e => this.setField(field._id, e.target.checked === true)} type=\"checkbox\" checked={this.getField(field._id, false)} className=\"form-control\" id={field.label} />\n                                  ) : (field.type === \"picture\") ? (\n                                    <span> \n                                        {this.getField(field._id) && this.getField(field._id).ext &&\n                                            <div className=\"mt-1 mb-1\">\n                                                <img className=\"img-fluid\" alt={field.label} src={`${window.location.origin}/public/files/${this.state.slug}/${field._id}${this.getField(field._id).ext}`} />\n                                            </div>\n                                        }\n                                        <input onChange={e => this.setField(field._id, e.target.files)} type=\"file\" className=\"form-control\" id={field.label} />\n                                    </span>\n                                  ) : (field.type === \"file\") ? (\n                                    <span> \n                                        {this.getField(field._id) && this.getField(field._id).ext &&\n                                            <div className=\"mt-1 mb-1\">\n                                                <a target=\"_blank\" alt={field.label} href={`${window.location.origin}/public/files/${this.state.slug}/${field._id}.zip`}>Download {field.label}</a>\n                                            </div>\n                                        }\n                                        <input onChange={e => this.setField(field._id, e.target.files)} type=\"file\" className=\"form-control\" id={field.label} />\n                                    </span>\n                                  ) : (field.type === \"textarea\") ? (\n                                    <textarea onChange={e => this.setField(field._id, e.target.value)} value={this.getField(field._id, \"\")} className=\"form-control\" id={field.label} placeholder=\"Enter text\" />\n                                  ) : (field.type === \"link\") ? (\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <input onChange={e => this.setInnerField(field._id, \"label\", e.target.value)} type=\"text\" value={this.getInnerField(field._id, \"label\")} className=\"form-control\" id={field.label} placeholder=\"Enter label\" />\n                                        </div>\n                                        <div className=\"col\">\n                                            <input onChange={e => this.setInnerField(field._id, \"url\", e.target.value)} type=\"url\" value={this.getInnerField(field._id, \"url\")} className=\"form-control\" id={field.label} placeholder=\"Enter url\" />\n                                        </div>\n                                    </div>\n                                  ) : (field.type === \"youtube\") ? (\n                                    <input onChange={e => this.setField(field._id, e.target.value)} type=\"url\" value={this.getField(field._id, \"\")} className=\"form-control\" id={field.label} placeholder=\"Enter YouTube embed url\" />\n                                  ) : (field.type === \"reference\") ? (\n                                    <input onChange={e => this.setField(field._id, e.target.value)} value={this.getField(field._id, \"\")} className=\"form-control\" id={field.label} placeholder=\"Enter entry slug\" />\n                                  ) : (field.type === \"datepicker\") ? (\n                                      <DatePicker.default\n                                        selected={this.getField(field._id) ? moment(this.getField(field._id)) : \"\"}\n                                        onChange={value => this.setField(field._id, value.toDate())} />\n                                  ) : (field.type === \"wysiwyg\") ? (\n                                       <ReactQuill onChange={value => this.setField(field._id, value)} value={this.getField(field._id, \"\")} />\n                                  ) : null\n                                }\n                            </div>\n                        )}\n                        { error }\n                        <button onClick={this.submit} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                        <button onClick={() => this.props.history.goBack()} type=\"submit\" className=\"btn btn-danger float-right\">Cancel</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n});","const Admin = React.createClass({\n    render() {\n        const currentUser = Store.getCurrentUser();\n        if (!currentUser || !currentUser.isAdmin) {\n            Store.redirect(\"/\");\n        }\n        const flashedSuccess = Store.getFlashedSuccess();\n\n        return (\n            <Switch>\n                <Route exact path=\"/admin/structures\" component={ AdminStructures } />\n                <Route exact path=\"/admin/structures/:slug\" component={ AdminStructureEdit } />\n                <Route exact path=\"/admin/structures/:slug/list\" component={ AdminEntries } />\n                <Route exact path=\"/admin/structures/:slug/:entrySlug\" component={ AdminEntryEdit } />\n                <Route exact path=\"/admin/users\" component={ AdminUsers } />\n                <Route path=\"/admin/\" render={() => (\n                    <div className=\"alert alert-info mt-3\" role=\"alert\">\n                        <h1 className=\"h2 alert-heading\">Welcome!</h1>\n                        <p className=\"mb-0\">You have successfully logged in as an admin! Select a route in the admin menu above to get started!</p>\n                    </div>\n                )} />\n            </Switch>\n        );\n    }\n});","const AdminStructureEdit = React.createClass({\n    getInitialState() {\n        return {};\n    },\n\n    componentDidMount() {\n        const structure = Store.getStructure(this.props.match.params.slug);\n        this.setState(\n            Object.assign({}, structure) // To prevent a referenced object\n        );\n    },\n\n    addField(e) {\n        e.preventDefault();\n\n        const fields = this.state.fields\n        this.setState({\n            fields: fields.concat([{\n                label: \"\",\n                type: \"text\"\n            }])\n        });\n    },\n\n    removeField(e, index) {\n        e.preventDefault();\n\n        const fields = this.state.fields;\n        fields.splice(index, 1);\n\n        this.setState({fields});\n    },\n\n    updateField(e, type, index) {\n        let fields = this.state.fields;\n        fields[index] = Object.assign({}, fields[index], {[type]: e.target.value});\n\n        this.setState({fields});\n    },\n\n    submit(e) {\n        e.preventDefault();\n        const { _id, name, slug, description, pageSize, fields } = this.state;\n        if (!name) {\n            return this.setState({error: \"Please enter a name\"});\n        }\n        if (!slug) {\n            return this.setState({error: \"Please enter a slug\"});\n        }\n        if (Store.getStructure(slug) && Store.getStructure(slug)._id != _id) {\n            return this.setState({error: \"Slug already exists on a structure\"});\n        }\n        if (!description) {\n            return this.setState({error: \"Please enter a description\"});\n        }\n        if (isNaN(pageSize)) {\n            return this.setState({error: \"Please enter a valid page size\"});\n        }\n        for (const field of fields) {\n            if (!field.label) {\n                return this.setState({error: \"Make sure all fields have a label\"});\n            }\n        }\n        this.setState({error: null});\n        Store.saveStructure({\n            _id,\n            name,\n            slug,\n            description,\n            pageSize,\n            fields\n        });\n    },\n\n    render() {\n        const fieldTypes = Store.getFieldTypes();\n        const fieldOptions = Object.keys(fieldTypes).map(type =>\n            <option key={type} value={type}>{fieldTypes[type]}</option>\n        );\n\n        if (!this.state._id) {\n            return (\n                <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                    This structure does not exist :(\n                </div>\n            );\n        }\n\n        let error = \"\";\n        if (this.state.error) {\n            error = (\n                <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                    Error: {this.state.error}\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"card mt-3\">\n                <div className=\"card-header\">{this.state.name || \"New structure\"}</div>\n                <div className=\"card-body\">\n                    <form onSubmit={e => e.preventDefault()}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"name\">Structure Name</label>\n                            <input onChange={e => this.setState({name: e.target.value})} value={this.state.name || \"\"} type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Enter name\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"slug\">Slug</label>\n                            <input onChange={e => this.setState({slug: e.target.value})} value={this.state.slug || \"\"} disabled={this.state._id !== \"new\" && \"disabled\"} type=\"text\" className=\"form-control\" id=\"slug\" placeholder=\"Enter Slug\" />\n                            <small className=\"form-text text-muted\">This is unique, url friendly way of referencing your data type. This cannot be changed once created.</small>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Description</label>\n                            <input onChange={e => this.setState({description: e.target.value})} value={this.state.description || \"\"} type=\"text\" className=\"form-control\" id=\"description\" placeholder=\"Enter description\" />\n                            <small className=\"form-text text-muted\">Will be used to describe the structure on the home listing.</small>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"pageSize\">Page Size</label>\n                            <input onChange={e => this.setState({pageSize: parseInt(e.target.value)})} value={this.state.pageSize || \"\"} type=\"number\" className=\"form-control\" id=\"pageSize\" placeholder=\"Enter page size\" />\n                            <small className=\"form-text text-muted\">Allows you to set how many entries appear on the page for the Structure Listing</small>\n                        </div>\n                        {this.state.fields && this.state.fields.map((field, index) =>\n                            <div className=\"row form-group\" key={index}>\n                                <div className=\"col\">\n                                    <input onChange={e => this.updateField(e, \"label\", index)} type=\"text\" className=\"form-control\" placeholder=\"Label\" value={field.label} />\n                                </div>\n                                <div className=\"col\">\n                                    <select onChange={e => this.updateField(e, \"type\", index)} className=\"form-control\" value={field.type}>\n                                        {fieldOptions}\n                                    </select>\n                                </div>\n                                <div className=\"col no-grow\">\n                                    <button onClick={e => this.removeField(e, index)} type=\"submit\" className=\"btn btn-danger\"><i className=\"fa fa-times\" aria-hidden=\"true\"></i></button>\n                                </div>\n                            </div>\n                        )}\n                        { error }\n                        <button onClick={this.addField} type=\"submit\" className=\"btn btn-secondary mr-3\">Add Field</button>\n                        <button onClick={this.submit} type=\"submit\" className=\"btn btn-primary\">Save</button>\n                        <button onClick={() => this.props.history.goBack()} type=\"submit\" className=\"btn btn-danger float-right\">Cancel</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n});","const AdminStructures = React.createClass({\n    render() {\n        const structures = Store.getStructures();\n\n        return (\n            <div>\n                <div className=\"alert alert-warning mt-3 clearfix\" role=\"alert\">\n                    <span className=\"mt-2 d-inline-block\">We love 'em Structures!</span>\n                    <Link to={`/admin/structures/new`}>\n                        <span role=\"button\" className=\"btn btn-outline-warning float-right\">New</span>\n                    </Link>\n                </div>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Slug</th>\n                            <th>Description</th>\n                            <th>Entries</th>\n                            <th>Edit</th>\n                            <th>Delete</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {structures.map(structure => (\n                            <tr key={structure.slug}>\n                                <td>{structure.slug}</td>\n                                <td>{structure.description}</td>\n                                <td>\n                                    <Link to={`/admin/structures/${structure.slug}/list`}>\n                                        <span role=\"button\" className=\"btn btn-secondary\">View Entries</span>\n                                    </Link>\n                                </td>\n                                <td>\n                                    <Link aria-label=\"Edit Structure\" className=\"btn btn-secondary\" to={`/admin/structures/${structure.slug}`}>\n                                        <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                                    </Link>\n                                </td>\n                                <td>\n                                    <a aria-label=\"Delete Structure\" href=\"\" className=\"btn btn-outline-danger\" onClick={e => e.preventDefault() || Store.deleteStructure(structure._id)}>\n                                        <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                                    </a>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n});","const AdminUsers = React.createClass({\n    render() {\n        const users = Store.getUsers();\n\n        return (\n            <div>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>User</th>\n                            <th>Admin</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {users.map(user => (\n                            <tr key={user.username}>\n                                <td>{user.username}</td>\n                                <td>\n                                    {user.isAdmin\n                                        ? <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\n                                        : <a onClick={e => e.preventDefault() || Store.promote(user._id)} role=\"button\" className=\"btn btn-primary\" href=\"\">Promote</a>\n                                    }\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n});","const server = `http://localhost:3001`;\nconst fieldTypes = {\n    \"text\": \"Small text input\",\n    \"number\": \"Number\",\n    \"checkbox\": \"Checkbox\",\n    \"textarea\": \"Textarea\",\n    \"picture\": \"Picture file upload\",\n    \"link\": \"Link to another page\",\n    \"wysiwyg\": \"WYSIWYG Editor\",\n    \"datepicker\": \"Datepicker\",\n    \"youtube\": \"YouTube Video\",\n    \"reference\": \"Reference to another entry\",\n    \"file\": \"Downloadable file\",\n}\n\n$.ajaxSetup({\n    type: \"POST\",\n    data: {},\n    dataType: 'json',\n    xhrFields: {\n       withCredentials: true\n    },\n    crossDomain: true\n});\n\nclass StoreClass {\n    constructor() {\n        this.setLoading(true);\n        this.loadData(() => {\n            this.setLoading(false);\n        })\n    }\n\n    isAdmin() {\n        return this.getCurrentUser() && this.getCurrentUser().isAdmin;\n    }\n\n    getCurrentUser() {\n        return this.getUsers().find(x => x._id === this.currentUserId);\n    }\n\n    getUsers() {\n        return this.users;\n    }\n\n    getUser(_id) {\n        return this.getUsers().find(user => user._id === _id);\n    }\n\n    getStructures() {\n        return this.structures;\n    }\n\n    getStructure(slug) {\n        if (slug === \"new\") {\n            return {\n                _id: \"new\",\n                fields: []\n            };\n        }\n        return this.getStructures().find(x => x.slug === slug);\n    }\n\n    getEntries() {\n        return this.entries;\n    }\n\n    getEntriesByStructure(slug) {\n        return this.getEntries().filter(x => x.structureSlug === slug);\n    }\n\n    getEntry(slug, entrySlug) {\n        if (entrySlug === \"new\") {\n            return {\n                _id: \"new\",\n            };\n        }\n        return this.getEntriesByStructure(slug).find(x => x.slug === entrySlug);\n    }\n\n    getEntryById(_id) {\n        return this.getEntries().find(x => x._id === _id);\n    }\n\n    getEntryWithoutSlug(entrySlug) {\n        return this.getEntries().find(x => x.slug === entrySlug);\n    }\n\n    getFieldTypes() {\n        return fieldTypes;\n    }\n\n    setHistoryObject(history) {\n        this.history = history;\n    }\n\n    setFlashedSuccess(flashedSuccess) {\n        this.flashedSuccess = flashedSuccess;\n    }\n\n    setFlashedError(flashedError) {\n        this.flashedError = flashedError;\n    }\n\n    redirect(location, flashedSuccess, flashedError) {\n        this.setFlashedSuccess(flashedSuccess);\n        this.setFlashedError(flashedError);\n        this.history.push(location);\n        this.setLoading(false);\n    }\n\n    getFlashedSuccess() {\n        // Remove the message after one show\n        const flashedSuccess = this.flashedSuccess;\n        this.flashedSuccess = null;\n        return flashedSuccess;\n    }\n\n    getFlashedError() {\n        // Remove the message after one show\n        const flashedError = this.flashedError;\n        this.flashedError = null;\n        return flashedError;\n    }\n\n    setLoading(loading) {\n        if (loading !== this.loading) {\n            this.loading = loading;\n            this.trigger();\n        }\n    }\n\n    isLoading() {\n        return this.loading;\n    }\n\n    subscribe(cb) {\n        this._subscribe = cb;\n    }\n\n    trigger() {\n        if (this._subscribe) {\n            this._subscribe();\n        }\n    }\n\n    // API calls\n\n    loadData(cb) {\n        async.parallel(\n            [cb => {\n                $.get(`${server}/users`)\n                .then(data => {\n                    this.users = data.all || [];\n                    this.currentUserId = data.currentUser;\n                    cb();\n                })\n            }, cb => {\n                $.get(`${server}/structures`)\n                .then(data => {\n                    this.structures = data || [];\n                    cb();\n                })\n            }, cb => {\n                $.get(`${server}/entries`)\n                .then(data => {\n                    this.entries = data || [];\n                    cb();\n                })\n            }],\n            cb\n        );\n    }\n\n    search(structureSlug, search) {\n        return $.ajax({\n            method: \"POST\",\n            url: `${server}/entries/search`,\n            data: {structureSlug, search}\n        })\n        .catch(e => {\n            this.setFlashedError(\"Something strange happened :(\");\n        })\n    }\n\n    saveUser(newUser) {\n        this.setLoading(true);\n        $.ajax({\n            method: \"POST\",\n            url: `${server}/users`,\n            data: newUser\n        })\n        .then(data => {\n            this.users.push(data);\n            this.setFlashedSuccess(\"Successfully create user. You may now login.\");\n            this.setLoading(false);\n        }).catch(e => {\n            this.setFlashedError(\"Unable to create user\");\n            this.setLoading(false);\n        })\n    }\n\n    saveStructure(structure) {\n        this.setLoading(true);\n        $.ajax({\n            method: structure._id === \"new\" ? \"POST\" : \"PUT\",\n            url: `${server}/structures`,\n            data: JSON.stringify(structure),\n            contentType: 'application/json',\n        })\n        .then(data => {\n            if (structure._id === \"new\") {\n                this.structures.push(data);\n            } else {\n                const index = this.structures.findIndex(x => x._id === structure._id);\n                if (index !== -1) {\n                    this.structures[index] = data;\n                }\n            }\n            this.redirect(\"/admin/structures\", \"Successfully saved\");\n        })\n        .catch(e => {\n            this.redirect(\"/admin/structures\", null, \"Unable to save structure\");\n        })\n    }\n\n    saveEntry(entry) {\n        this.setLoading(true);\n        const structure = this.getStructure(entry.structureSlug);\n        let data = new FormData();\n        let fileNumber = 0;\n        Object.keys(entry.fields).forEach(key => {\n            if (entry.fields[key].constructor === FileList) {\n                const field = structure.fields.find(f => f._id === key);\n                data.append(`file-${fileNumber}`, entry.fields[key][0]);\n                const toZip = field && field.type === \"file\";\n                let ext = entry.fields[key][0].name.match(/\\.\\w+$/);\n                ext = ext ? ext[0] : undefined;\n                entry.fields[key] = {file: fileNumber, ext, toZip };\n                fileNumber++;\n            }\n        });\n        data.append('data', JSON.stringify(entry));\n        $.ajax({\n            method: entry._id === \"new\" ? \"POST\" : \"PUT\",\n            url: `${server}/entries`,\n            data: data,\n            processData: false,\n            contentType: false\n        })\n        .then(data => {\n            if (entry._id === \"new\") {\n                this.entries.push(data);\n            } else {\n                const index = this.entries.findIndex(x => x._id === entry._id);\n                if (index !== -1) {\n                    this.entries[index] = data;\n                }\n            }\n            this.redirect(`/admin/structures/${entry.structureSlug}/list`, \"Successfully saved\");\n        })\n        .catch(e => {\n            this.redirect(`/admin/structures/${entry.structureSlug}/list`, null, \"Unable to save entry\");\n        })\n    }\n\n    addComment(entryId, comment) {\n        this.setLoading(true);\n        const currentUser = this.getCurrentUser();\n        if (!currentUser) {\n            return this.redirect(`/${entry.structureSlug}/${entry.slug}`, null, \"Must be logged in\");\n        }\n        const entry = this.getEntryById(entryId);\n        $.ajax({\n            method: \"POST\",\n            url: `${server}/entries/comment`,\n            data: { _id: entryId, comment }\n        })\n        .then(data => {\n            entry.comments.push(data);\n            this.redirect(`/${entry.structureSlug}/${entry.slug}`, \"Successfully commented\");\n        })\n        .catch(e => {\n            this.redirect(`/${entry.structureSlug}/${entry.slug}`, null, \"Unable to save entry\");\n        })\n    }\n\n    deleteStructure(_id) {\n        this.setLoading(true);\n        $.ajax({\n            method: \"DELETE\",\n            url: `${server}/structures`,\n            data: {_id},\n        })\n        .then(data => {\n            const index = this.structures.findIndex(x => x._id === _id);\n            if (index !== -1) {\n                this.structures.splice(index, 1);\n            }\n            this.redirect(\"/admin/structures\", \"Successfully deleted structure\");\n        })\n        .catch(e => {\n            this.redirect(\"/admin/structures\", null, \"Unable to delete structure\");\n        })\n    }\n\n    deleteEntry(_id) {\n        const index = this.entries.findIndex(x => x._id === _id);\n        if (index === -1) {\n            return;\n        }\n        const structureSlug = this.entries[index].structureSlug;\n        this.setLoading(true);\n        $.ajax({\n            method: \"DELETE\",\n            url: `${server}/entries`,\n            data: {_id},\n        })\n        .then(data => {\n            this.entries.splice(index, 1);\n            this.redirect(`/admin/structures/${structureSlug}/list`, \"Successfully deleted entry\");\n        })\n        .catch(e => {\n            this.redirect(`/admin/structures/${structureSlug}/list`, \"Unable to delete entry\");\n        });\n    }\n\n    promote(_id) {\n        this.setLoading(true);\n        $.ajax({\n            method: \"PUT\",\n            url: `${server}/users/promote`,\n            data: {_id},\n        })\n        .then(data => {\n            const user = this.users.find(x => x._id === _id);\n            if (user) {\n                user.isAdmin = true;\n            }\n            this.redirect(\"/admin/users\", \"Successfully promoted user\");\n        })\n        .catch(e => {\n            this.redirect(\"/admin/users\", null, \"Unable to promote user\");\n        });\n    }\n\n    toggleFavorite(_id) {\n        const currentUser = this.getCurrentUser();\n        if (!currentUser) {\n            this.setFlashedError(\"You must be logged in\");\n            return this.trigger();\n        }\n        $.ajax({\n            method: \"PUT\",\n            url: `${server}/users/toggle-favorite`,\n            data: {_id},\n        })\n        .then(data => {\n            const index = currentUser.favorites.indexOf(_id);\n            if (index === -1) {\n                currentUser.favorites.push(_id);\n            } else {\n                currentUser.favorites.splice(index, 1);\n            }\n            this.trigger();\n        })\n        .catch(e => {\n            this.setFlashedError(\"An unkown error occured\");\n            this.trigger();\n        })\n    }\n\n    login(username, password) {\n        this.setLoading(true);\n        $.post(`${server}/login`, {username, password})\n        .then(_id => {\n            this.currentUserId = _id;\n            this.setFlashedSuccess(\"Successfully logged in\");\n            this.setLoading(false);\n        })\n        .catch(e => {\n            this.setFlashedError(\"Invalid username/password\");\n            this.setLoading(false);\n        });\n    }\n\n    logout() {\n        this.setLoading(true);\n        $.post(`${server}/logout`)\n        .then(() => {\n            this.currentUserId = null;\n            this.setFlashedSuccess(\"Successfully logged out\");\n            this.setLoading(false);\n        })\n    }\n}\n\nconst Store = new StoreClass();","const { BrowserRouter, Switch, Route, Link } = ReactRouterDOM;\n\nconst getParams = location => {\n    let params = {};\n    if (!location || !location.search || location.search[0] != \"?\") {\n        return params;\n    }\n    location.search.slice(1).split(\"&\").forEach(param => {\n        const parts = param.split(\"=\");\n        if (parts.length === 2) {\n            params[parts[0]] = parts[1];\n        }\n    })\n    return params;\n}\n\nReactDOM.render(\n    <BrowserRouter>\n        <Route path=\"/\" component={ AppComponent } />\n    </BrowserRouter>,\n    document.getElementById('content')\n);\n"]}